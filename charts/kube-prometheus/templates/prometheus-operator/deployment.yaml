{{- if .Values.prometheusOperator.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/name: prometheus-operator
    app.kubernetes.io/part-of: kube-prometheus
    app.kubernetes.io/version: {{ .Values.prometheusOperator.version | default .Chart.AppVersion }}
  name: prometheus-operator
  namespace: {{ template "kube-prometheus.namespace" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: prometheus-operator
      app.kubernetes.io/part-of: kube-prometheus
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: prometheus-operator
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: prometheus-operator
        app.kubernetes.io/part-of: kube-prometheus
        app.kubernetes.io/version: {{ .Values.prometheusOperator.version | default .Chart.AppVersion }}
    spec:
      automountServiceAccountToken: true
      containers:
        - name: prometheus-operator
          {{- $configReloaderRegistry := .Values.global.imageRegistry | default .Values.prometheusOperator.prometheusConfigReloader.image.registry -}}
          {{- $operatorRegistry := .Values.global.imageRegistry | default .Values.prometheusOperator.image.registry }}
          args:
            - --kubelet-service=kube-system/kubelet
            - --prometheus-config-reloader={{ $configReloaderRegistry }}/{{ .Values.prometheusOperator.prometheusConfigReloader.image.repository }}:{{ .Values.prometheusOperator.prometheusConfigReloader.image.tag | default .Chart.AppVersion }}
          image: "{{ $operatorRegistry }}/{{ .Values.prometheusOperator.image.repository }}:{{ .Values.prometheusOperator.image.tag | default .Chart.AppVersion }}"
          ports:
          - containerPort: 8080
            name: http
          resources:
{{ toYaml .Values.prometheusOperator.resources | indent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
        - name: kube-rbac-proxy
          {{- $kubeRbacProxyRegistry := .Values.global.imageRegistry | default .Values.kubeRbacProxy.image.registry }}
          args:
            - --logtostderr
            - --secure-listen-address=:8443
            - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
            - --upstream=http://127.0.0.1:8080/
          image: "{{ $kubeRbacProxyRegistry }}/{{ .Values.kubeRbacProxy.image.repository }}:{{ .Values.kubeRbacProxy.image.tag }}"
          ports:
          - containerPort: 8443
            name: https
          resources:
{{ toYaml .Values.kubeRbacProxy.resources | indent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
{{- if .Values.prometheusOperator.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.prometheusOperator.nodeSelector | indent 8 }}
{{- end }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        # seccompProfile:
        #   type: RuntimeDefault
      serviceAccountName: prometheus-operator
{{- end }}
